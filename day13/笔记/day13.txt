1.事件传递机制
  1.事件传递：
    当页面一个元素触发事件时，其他相关的元素都会接收这个事件，都可以选择
	对事件作出响应
  2.事件传递机制：
    事件传递机制描述的是页面中元素处理事件的顺序，有两种机制：冒泡 和 捕获
	1.冒泡传递
	  从里向外逐个触发(默认传递方式)
	2.捕获传递
	  从外向里逐个触发( IE 不支持)
	阻止事件传递
	  该事件只在当前元素中执行，不向上传递
	  evt.stopPropagation();(默认冒泡情况下)
2.jQuery
  1.介绍
     jQuery 是一个 JavaScript 的库，通过封装原生的JavaScript，得到一整套定
	 义好的方法简化 JS 操作
	 Writer Less ，Do More
	 jQuery 版本
	   jQuery 1.xx.x 版本，兼容 IE 6,7,8
	   jQuery 2.xx.x 版本，不再兼容 IE 6,7,8
  2.jQuery的功能和优势
    1.简化 DOM 操作，想操作 css 一样去操作 DOM
	2.可以直接通过选择器设置元素样式
	3.简化 JS 代码操作(链式调用)
	4.事件的处理更加容易
	-----------------------------------------
	5.各种动画效果使用更加方便
	6.让 Ajax 技术更完美
	7.基于 jQuery 有大量方便的插件
	8.自行扩展功能插件
  3.jQuery使用
    1.引入 jQuery 文件
      1.本地文件
	    <script src=""></script>
	  2.网络文件引入
	    <script src="url"></script>
	  注意：如果想使用 jQuery 语法操作 JS，必须将 jQuery 引入放在 JS 代码之前
	2.jQuery 使用
	  1.jQuery 对象 - jQuery / $
	    jQuery 对象是对 DOM 对象封装之后产生的对象
		jQuery 对象只能操作 jQuery 提供的方法，DOM 对象也只能操作原生 JS 提供
		的方法，不能混用
	  2.工厂函数 - $()
	    如果想要获取元素对象，必须通过工厂函数
		函数中可以传递参数：选择器 / DOM 对象
	  3.jQuery 对象与 DOM 对象互相转换
	    1. DOM 转换为 jQuery 对象
		  var h1 = document.getElementsByTagName('h1')[0];
		  var $h1 = $(h1);
		2.jQuery 转换为 DOM
		  var h1 = $h1[0];
		  var h1 = $h1.get(0);
3.jQuery 选择器
  1.作用
    根据选择器获取页面中的元素，返回值都是由 jQuery 对象组成的数组
  2.语法：
    $('选择器')
  3.常用选择器
    1.基础选择器
	  1.ID选择器
	    $('#id');  返回id属性值为指定的id的元素对象
	  2.类选择器
	    $('.className');  返回指定类名对象的元素
	  3.标签选择器
	    $('element');  返回指定标签名对应的元素
	  4.群组选择器
	    $('selector1,selector2,...');
	2.层级选择器
	  1.后代选择器
	    $('selector1 selectore')
	  2.子代选择器
	    $('selector1>selector2')
	  3.相邻兄弟选择器
	    $('selector1+selector2')
		匹配紧跟在selector1后满足selector2的元素
		h1+p
	  4.通用兄弟选择器
	    $('selector~selector2')
		匹配selector1后所有满足selector2的元素
	3.基本过滤选择器
		过滤选择器需要结合其他选择器一起使用
		1. :first
		  只匹配一组元素中的第一个元素
		  $('p:first')
		2. :last
		  匹配一组元素中的最后一个元素
		  $('p:last')
		3. :not
		  否定筛选，将满足selector选择器的元素都排除在外，匹配剩余元素
		  $('p:not')
		4. :odd
		  匹配偶数行对应的元素(奇数下标)
		5. :even
		  匹配奇数行对应的元素
		6. :eq(index)
		  匹配下标等于index的元素
		7. :gt(index)
		  匹配下标大于index的元素
		8. :lt(index)
		  匹配下标小于index的元素
	4.属性选择器
	  根据标签属性匹配元素
	  1.[attribute]
	    匹配包含指定属性的元素
	  2.[attribute=value]
	    匹配属性attribute=value的元素
	  3.[attribute!=value]
	    匹配属性attribute属性值不等于value的元素
	  4.[attribute^=value]
	    匹配属性attribute属性值以value开头的元素
	  5.[attribute$=value]
	    匹配属性attribute属性值以value结尾的元素
	  6.[attribute*=value]
	    匹配属性attribute属性值包含value的元素
	5.子元素过滤选择器
	  1. :first-child
	    匹配属于其父元素中的首个子元素
	  2. :last-child
	    匹配属于其父元素中的最后一个子元素
	  3. :nth-child(n)
	    匹配属于其父元素中欧冠的第n个子元素
	  注意：
	    将要匹配的子元素与筛选选择器相结合使用
4.jQuery操作DOM
  1.基本操作
    1.html()
	  获取或者设置jQuery对象中的html内容
	  类似于DOM innerHTML，可识别标签
	2.text()
	  获取或者设置jQuery对象中的text内容
	  类似于innerText
	3.var()
	  获取或者设置jQuery对象value值(常见表单控件)
	  练习：
	    1.创建文本框，定义id
		2.创建按钮，内容为"显示"
		3.创建div，当按钮被点击时，将文本内容以一级标题的形式显示在div中
		4.使用jQuery实现
	4.属性操作
	  1.attr()
	    读取或设置jQuery对象的属性值
		参数为字符串形式的属性名
	  2.removeAttr()
	    移除指定的属性，参数为属性名
  2.样式操作
    1. attr()
	  添加id或class属性，对应选择器，为元素添加样式
	2. addClass('className')
	  将className作为值添加打元素的class属性上，是可以连缀调用的
	3. removeClass('className')
	  移除className
	  参数可以省略，表示清空类选择器
	4. toggleClass('')
	  切换样式：
	    元素如果具备className对应的样式，则删除
		如果没有，就添加







